title CreateRoom

participant Client
participant ServerConnection
participant ClientConnection
participant CreateRoomMessage
participant SetupMessageHandler
participant ServerController
participant Room
participant Server


activate Server
activate ServerConnection
activate ServerController
activate Client
activate ClientConnection

[-> Client:sendMessage(new \nCreateRoomMessage\n(privateGame, \n playersNum, \n username))
Client->ServerConnection:sendMessage\n(CreateRoom ...)
ServerConnection->ClientConnection:receiveMessage()

 ClientConnection ->CreateRoomMessage:accept\n(setupMessageHandler)
 activate CreateRoomMessage

CreateRoomMessage->SetupMessageHandler:handle(CreateRoomMessage)
deactivate CreateRoomMessage
activate SetupMessageHandler
SetupMessageHandler->ServerController: createRoom(...)
deactivate SetupMessageHandler


ServerController-->ClientConnection: sendMessage(Invalid ParametersError)
ClientConnection-->Client:InvalidParametersError

 ServerController ->Server:getPendingConnections()\nand remove clientConnection

 
 ServerController->Room: new Room()
 activate Room
 ServerController<--Room: room
 
 ServerController  -->ServerController:getRoomId()

ServerController ->Server:addRoom(roomId,room)
 


 ServerController ->Room:\nsendRoomDetails()
 deactivate Room
Room-->[:sendAll(new RoomDetailsMessage())
 deactivate Room
